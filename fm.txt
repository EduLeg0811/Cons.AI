  try {    // Panels: set description under each h2 (robust by panel group class)    document.querySelectorAll('.tool-panel .panel-header .panel-info').forEach(info => {      const p = info.querySelector('p');      if (!p) return;      const panel = info.closest('.tool-panel');      if (!panel) return;      let descr = '';      if (panel.classList.contains('bots')) {        descr = 'Assistentes de Conversação por IA';      } else if (panel.classList.contains('search')) {        descr = 'Pesquisa léxica por termos exatos';      } else if (panel.classList.contains('sem')) {        descr = 'Pesquisa semântica por afinidade';      } else if (panel.classList.contains('apps')) {        descr = 'Aplicativos de IA para Pesquisa';      } else if (panel.classList.contains('utils')) {        descr = 'Links e Recursos Úteis';      }      if (descr) p.textContent = descr;    });    // Tool cards: set title, short description, and extra help    document.querySelectorAll('.tool-card').forEach(card => {      const titleEl = card.querySelector('.tool-info h3');      if (!titleEl) return;      const key = titleEl.textContent.trim();      let canonical = (typeof TOOL_ALIASES === 'object' && TOOL_ALIASES[key]) || key;      // Disambiguate by href when titles are reused (e.g., "Livros & Tratados")      try {        const href = (card.getAttribute('href') || '').toLowerCase();        if (href.includes('index_lexical.html')) {          canonical = 'Pesquisa em Livros';        } else if (href.includes('index_lexverb.html')) {          canonical = 'Definologia de Verbetes';        } else if (href.includes('index_semantical.html')) {          canonical = 'Pesquisa Semântica em Livros';        } else if (href.includes('index_verbetopedia.html')) {          canonical = 'Verbetopedia';        } else if (href.includes('index_ccg.html')) {          canonical = 'Quest?es do Conscienciograma';        } else if (href.includes('index_mancia.html')) {          canonical = 'Bibliomancia Digital';        } else if (href.includes('index_quiz.html')) {          canonical = 'Quiz Conscienciológico';        }              if (!msg && href2.includes('index_verbetopedia.html')) {          msg = TOOL_MESSAGES['Verbetopedia'] || msg;        }        if (!msg && href2.includes('index_ccg.html')) {          msg = TOOL_MESSAGES['Quest?es do Conscienciograma'] || msg;        }      } catch (e) { /* ignore */ }      let msg = TOOL_MESSAGES[canonical];      // Fallbacks for encoding-mangled keys based on href      try {        const href2 = (card.getAttribute('href') || '').toLowerCase();        if (!msg && href2.includes('index_quiz.html')) {          msg = TOOL_MESSAGES['Quiz Conscienciológico'] || msg;        }        if (!msg && href2.includes('index_semantical.html')) {          msg = TOOL_MESSAGES['Pesquisa Semântica em Livros'] || msg;        }      } catch (e) { /* ignore */ }      if (!msg) return;      // Native tooltip: use a plain-text version of title/short/extra      const titleRaw = msg.title || msg.short || msg.extra;      if (titleRaw) {        const div = document.createElement('div');        div.innerHTML = titleRaw;        const titleText = (div.textContent || '').replace(/\s+/g, ' ').trim();        if (titleText) {          card.setAttribute('title', titleText);        }      }      // One-line short description (accepts HTML for <em>)      const shortEl = card.querySelector('.tool-info > p');      if (shortEl && msg.short) {        shortEl.innerHTML = msg.short;      }      // Extra explanatory block (HTML)      const extraEl = card.querySelector('.tool-info-extra');      if (extraEl && msg.extra) {        extraEl.innerHTML = msg.extra;      }    });  } catch (e) {    console.warn('messages.js: failed to apply messages', e);  }}// Run after DOM is ready